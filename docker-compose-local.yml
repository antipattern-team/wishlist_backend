version: '3'

services:
  elastic:
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    environment:
        discovery.type: 'single-node'
        network.host: '0'
        ES_JAVA_OPTS: '-Xms200m -Xmx200m'
    volumes:
        - ../data/elasticsearch:/usr/share/elasticsearch/data:rw

  crawler:
    environment:
      ESHOST: 'elastic'
      ESCOLL: 'products'
      PGHOST: 'postgres'
      POSTGRES_USER: 'server'
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: 'wishlist'
      DEBUG: ${DEBUG}
    build:
      context: './crawler'
      dockerfile: './Dockerfile'
    depends_on:
      - elastic
      - postgres
    volumes:
      - ../data/crawler:/data

  postgres:
    restart: always
    image: postgres:latest
    environment:
      POSTGRES_USER: 'server'
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: 'wishlist'
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ../data/postgres:/var/lib/postgresql/data

  rabbitmq:
    restart: always
    image: rabbitmq:latest

  api:
    environment:
      ESHOST: 'elastic'
      ESCOLL: 'products'
      PGHOST: 'postgres'
      RMQHOST: 'rabbitmq'
      APPSECRET: ${AUTHKEY}
      POSTGRES_USER: 'server'
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: 'wishlist'
      DEBUG: ${DEBUG}
    build:
      context: './api'
      dockerfile: './Dockerfile'
    depends_on:
      - elastic
      - postgres
      - rabbitmq

  auth:
    environment:
      RMQHOST: 'rabbitmq'
      AUTHKEY: ${AUTHKEY}
    build:
      context: './auth_server'
      dockerfile: './Dockerfile'
    depends_on:
      - rabbitmq

  swagger:
    environment:
      SWAGGER_JSON: '/swagger/config.json'
    build: './swagger'
    volumes:
      - ./swagger:/swagger

  nginx:
    build:
      context: './nginx'
      dockerfile: './Dockerfile.local'
    ports:
      - 8080:80
      - 9090:90
    depends_on:
      - api
      - swagger
